# Filename: .github/workflows/ci.yml
# Simplified to run only on Python 3.11 and cleaned up triggers

name: CI

on:
  # Triggers the workflow on push events to the main branch
  push:
    branches: [ main ] # Removed ver/1.3.0

  # Triggers the workflow on pull request events targeted at the main branch
  pull_request:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # No matrix needed if only testing one Python version
    # strategy:
    #  fail-fast: false
    #  matrix:
    #    python: [3.9, 3.10, 3.11] # REMOVED

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4 # Use latest major version

    # Sets up Python environment explicitly to 3.11
    - name: Set up Python 3.11
      uses: actions/setup-python@v4 # Use latest major version
      with:
        # Hardcode the required Python version
        python-version: '3.11'
        # Optional: cache dependencies for faster builds
        cache: 'pip'

    # Installs dependencies using pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Check if requirements.txt exists before trying to install
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install testing and linting tools separately
        # Ensure these tools are compatible with Python 3.11
        pip install pytest pytest-qt pytest-cov mypy black isort flake8 codecov

    # Optional: Add step to check environment (useful for debugging)
    - name: Display Python version and environment info
      run: |
        python --version
        pip list

    # Runs Black code formatter check
    - name: Run formatting check (Black)
      run: black --check .

    # Runs isort import sort check
    - name: Run import sort check (isort)
      run: isort --check-only .

    # Runs flake8 linter
    - name: Run linting (flake8)
      run: flake8 . # Add any specific flake8 args if needed

    # Runs MyPy type checker
    - name: Run type checking (mypy)
      run: mypy . # Adjust path if needed, e.g., mypy services/ ui/

    # Runs tests using pytest with coverage reporting
    - name: Run tests with coverage
      run: |
        # Run pytest for Python 3.11
        pytest --cov=services --cov=models --cov=ui --cov=utils --cov=config --cov-report=xml

    # Uploads coverage report to Codecov
    - name: Upload coverage to Codecov
      # Condition: run only if previous steps succeeded and it's not a pull request trigger
      if: success() && github.event_name != 'pull_request'
      uses: codecov/codecov-action@v4 # Use latest major version
      with:
        files: coverage.xml # Specify the coverage report file
        # token: ${{ secrets.CODECOV_TOKEN }} # Usually only needed for private repos
        fail_ci_if_error: true # Optional: fail the workflow step if upload fails